package day05;

import java.util.Scanner;

public class 배열예제 {

	public static void main(String[] args) {
		
	//	int[] a = {10,15,25,32,20}; // 배열 선언 후 정수형 값 저장
		
//      0부터 배열 길이보다 하나 적은 만큼 반복하며 index 값 출력
//      배열 길이 하나 적은 즉 10이면 9번째가 마지막이므로 if 문을 통해 
		
//		for(int i =0 ; i<a.length; i++) {
//			if( i == a.length-1) {
//			System.out.print(a[i]);
//			break;
//		}
//		System.out.print(a[i]+",");
//		
//		}
		//===========================================================
		
		//a 배열의 전체 합 출력
		
//		int sum =0 ;
//		for(int i =0 ; i < a.length; i++) {
//			sum += a[i];
//		}
//		System.out.println("총합 :  "+sum);

		Scanner sc = new Scanner(System.in);		
		int[] b = new int[10];//10칸짜리 int 배열 만들기
		// 배열명은 b
		// 인덱스(원소)는 10개 구성
		
		//	배열의 요소 출력(for 사용)	
//		for(int i=0; i<b.length; i++) {
//			System.out.print("b 배열의 "+i+"번째 인덱스>\t");
//			b[i] = sc.nextInt(); // 배열 index에 정수값을 입력 받음
//		}
//		//===========================================================
//          b열의 짝수번째 인덱스 값만 출력 
//		for(int i=0; i<b.length; i++) {
//			if(i % 2 == 0) { //i번째가 짝수일때 
//				System.out.println("짝수 "+i+"번째->"+b[i]);
//			}
//		}
//		//===========================================================
//		 b 배열의 값들 중에 짝수값만 출력
//		for(int i=0; i<b.length; i++) {
//			if(b[i] % 2 == 0) {
//				System.out.println("짝수값   "+b[i]);
//			}
////		}
//		//===========================================================
//		// b 배열의 값들 중에 홀수값의 합을  출력
//		int sum =0;
//		for(int i=0; i<b.length; i++) {
//			if(b[i] % 2 != 0) {
//				sum += b[i];				
//			}						
//		}
//		System.out.println("홀수의 합:  "+sum);
//		
//		//===========================================================
//		//b 배열의 값들 중 3의 배수 합, 5의 배수 합, 3과5의 배수 합, 둘다아닌 경우 합 구하기
//		int sum3 =0; // 3의 배수 합의 변수
//		int sum5 =0; // 5의 배수 합의 변수
//		int sum35 =0; //3과 5의 배수의 합 변수
//		int n =0; // 둘다 아닌 경우 합 변수
//		
//		//(주의) 3과 5의 배수에 해당하는 경우는 3의 배수와 5의 배수 값 모두 합에 누적해야 함
//		for(int i=0; i<b.length; i++) {// 0부터 배열길이-1만큼 반복
//			if(b[i] % 3 == 0 && b[i] % 5 == 0 ) {
//				sum35 += b[i];	
//				sum3 += b[i];	
//				sum5 += b[i];					
//			}	else if	(b[i] % 3 ==0) {
//				sum3 += b[i];				
//			}	else if	(b[i] % 5 ==0) {
//				sum5 += b[i];				
//			}	else {	
//				n += b[i];
//			}
//		}
//		System.out.println("3의 배수합 :  "+ sum3);
//		System.out.println("5의 배수합 :  "+ sum5);
//		System.out.println("3과 5의 배수합 :  "+ sum35);
//		System.out.println("둘다아님의 합 :  "+ n);

		//===========================================================
		
		// 배수의 합 구하기 다른 방법
//		for(int i=0; i<b.length; i++) {
//			if(b[i] % 3 == 0 && b[i] % 5 == 0) {
//				sum35 += b[i];
//			}
//			if(b[i] % 3 == 0) {문제
//				sum3 += b[i];
//			}
//			if(b[i] % 5 == 0) {
//				sum5 += b[i];
//			}
//			if(b[i] % 3 != 0 && b[i] % 5 != 0) {
//				n += b[i];
//			}
//		}
//		System.out.println("3의 배수합 :  "+sum3);
//		System.out.println("5의 배수합 :  "+sum5);
//		System.out.println("3과 5의 배수합 :  "+sum35);
//		System.out.println("둘다아님의 합 :  "+n);
//		
		
		//===========================================================
		
		
		// 배열 index의 값들을 합하여 c[0]번째 배열에 누적한 합의 값을 넣음
		// c[0]에 계속 누적해 가야하므로 반복문인 for문을 1부터 시작하여야만
		// c[0] 값에 c[1]~c[4] 값들이 계속 더하여 누적해 감.
		// 주의) 반복문 시작을 0부터 하면 안됨
		
//		int[] c = {2,4,6,8,10};
		
//		for(int i =1; i<c.length; i++) {
//			
//			c[0] = c[0] + c[i];   //c[0] += c[i]
//		}		
//		
//		System.out.println(c[0]);

		
		//===========================================================
		
		// 배열 값을 한칸씩 앞당기기
		
		int[] c = {2,4,6,8,10}; // 결과는  c={4,6,8,10,2}
		
		int  temp = c[0] ; // 배열 0번째 값을 임시 저장할 변수 선언 후 이동하여 저장시킴		     
		      
		for(int i = 0; i<c.length-1 ; i++) {// 배열의 자리값을 하나 앞으로 이동하기 위해
			                               // 마지막 칸은 temp에 저장된 값으로 주어야 함 
			  c[i] = c[i + 1]; 
			  // 배열 칸의 값을 이동(1번째를 0번째로, 2번째를 1번째로, 3번째를 2번째로, 4번째를 3번째로 이동)
			  // 5번째 칸의 값은 없으모로 i가 4로 하면 안됨
			  // i가 3번째까지만 수행하고 4번째 칸은 아까 임시저장한 temp 값을 넣어주기 위해
		}
            c[c.length-1]  = temp; // 마지막 즉 4(길이-1)번째 칸에는 아까 임시저장한 값으로 줌
               // c.length는 배열 길이이므로 5이나 배열은 0으로 시작하여 -1을 하여 4번째가 마지막 칸임
            
        
	    for(int i = 0; i<c.length; i++) {   //반복하여 배열 index의 값을 출력 
				System.out.println(i + "번째\t"+ c[i]);
			  	
		}
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
			
	       
			}
	
	
	
	
	
	
	
	
	
	
}
	         
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
